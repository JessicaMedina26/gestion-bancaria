# Generated by Django 5.0 on 2023-12-11 01:14

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Ciudad',
            fields=[
                ('id_ciudad', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=50, verbose_name='Nombre')),
                ('codigo_postal', models.IntegerField(verbose_name='Código Postal')),
                ('estado', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Departamento',
            fields=[
                ('id_departamento', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=50, verbose_name='Nombre')),
                ('estado', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['-id_departamento'],
            },
        ),
        migrations.CreateModel(
            name='Persona',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('tipo_documento', models.CharField(max_length=10)),
                ('nro_documento', models.CharField(max_length=20)),
                ('celular', models.CharField(max_length=20)),
                ('direccion', models.CharField(max_length=150)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('ciudad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestion_bancaria.ciudad')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id_cliente', models.AutoField(primary_key=True, serialize=False)),
                ('fecha_ingreso', models.DateTimeField(auto_now_add=True, verbose_name='Fecha Ingreso')),
                ('calificacion', models.IntegerField(verbose_name='Calificación')),
                ('persona', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cliente', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Cuenta',
            fields=[
                ('id_cuenta', models.AutoField(primary_key=True, serialize=False)),
                ('nro_cuenta', models.PositiveIntegerField(unique=True)),
                ('nro_contrato', models.CharField(blank=True, editable=False, max_length=255, unique=True)),
                ('fecha_alta', models.DateTimeField(auto_now_add=True, verbose_name='Fecha Alta')),
                ('tipo_cuenta', models.CharField(choices=[('CUENTA CORRIENTE', 'CUENTA CORRIENTE'), ('CAJA DE AHORRO', 'CAJA DE AHORRO')])),
                ('saldo', models.DecimalField(decimal_places=2, max_digits=10)),
                ('costo_mantenimiento', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('promedio_acreditacion', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('moneda', models.CharField(choices=[('GS', 'GS'), ('USD', 'USD')], default='GS')),
                ('estado', models.CharField(choices=[('ACTIVO', 'ACTIVO'), ('INACTIVO', 'INACTIVO'), ('BLOQUEADO', 'BLOQUEADO')], default='ACTIVO')),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cliente', to='gestion_bancaria.cliente')),
            ],
        ),
        migrations.AddField(
            model_name='ciudad',
            name='departamento',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestion_bancaria.departamento'),
        ),
        migrations.CreateModel(
            name='Movimiento',
            fields=[
                ('id_movimiento', models.AutoField(primary_key=True, serialize=False)),
                ('fecha_movimiento', models.DateTimeField(auto_now_add=True)),
                ('tipo_movimiento', models.CharField(choices=[('CREDITO', 'CREDITO'), ('DEBITO', 'DEBITO')])),
                ('saldo_anterior', models.DecimalField(decimal_places=2, max_digits=10)),
                ('saldo_actual', models.DecimalField(decimal_places=2, max_digits=10)),
                ('monto_movimiento', models.DecimalField(decimal_places=2, max_digits=10)),
                ('cuenta_origen', models.DecimalField(decimal_places=2, max_digits=10)),
                ('cuenta_destino', models.DecimalField(decimal_places=2, max_digits=10)),
                ('canal', models.CharField(choices=[('APP', 'APP'), ('WEB', 'WEB')], default='WEB')),
                ('cuenta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cuenta', to='gestion_bancaria.cuenta')),
            ],
        ),
    ]
